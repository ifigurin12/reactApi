// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using integral_api.Data;

namespace integral_api.Migrations
{
    [DbContext(typeof(QnAContext))]
    partial class QnAContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.15");

            modelBuilder.Entity("integral_api.Models.AnswerModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuestionId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("QuestionModelId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("QuestionModelId");

                    b.ToTable("Answers");

                    b.HasData(
                        new
                        {
                            Id = 10,
                            IsCorrect = true,
                            QuestionId = 5,
                            Text = "Это функция, которая возвращает React-элемент"
                        },
                        new
                        {
                            Id = 11,
                            IsCorrect = false,
                            QuestionId = 5,
                            Text = "Это HTML-тег в React"
                        },
                        new
                        {
                            Id = 12,
                            IsCorrect = false,
                            QuestionId = 5,
                            Text = "Это класс в JavaScript"
                        },
                        new
                        {
                            Id = 13,
                            IsCorrect = true,
                            QuestionId = 6,
                            Text = "Это расширение языка JavaScript"
                        },
                        new
                        {
                            Id = 14,
                            IsCorrect = false,
                            QuestionId = 6,
                            Text = "Это язык разметки, похожий на HTML"
                        },
                        new
                        {
                            Id = 15,
                            IsCorrect = false,
                            QuestionId = 6,
                            Text = "Это встроенный шаблонизатор"
                        },
                        new
                        {
                            Id = 16,
                            IsCorrect = true,
                            QuestionId = 7,
                            Text = "Используя функцию setState"
                        },
                        new
                        {
                            Id = 17,
                            IsCorrect = false,
                            QuestionId = 7,
                            Text = "Создавая переменную с именем state"
                        },
                        new
                        {
                            Id = 18,
                            IsCorrect = false,
                            QuestionId = 7,
                            Text = "React не поддерживает состояние"
                        });
                });

            modelBuilder.Entity("integral_api.Models.QuestionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = 5,
                            Text = "Что такое компонент в React?"
                        },
                        new
                        {
                            Id = 6,
                            Text = "Что такое JSX в React?"
                        },
                        new
                        {
                            Id = 7,
                            Text = "Как создать состояние (state) в React?"
                        });
                });

            modelBuilder.Entity("integral_api.Models.AnswerModel", b =>
                {
                    b.HasOne("integral_api.Models.QuestionModel", null)
                        .WithMany("Answers")
                        .HasForeignKey("QuestionModelId");
                });

            modelBuilder.Entity("integral_api.Models.QuestionModel", b =>
                {
                    b.Navigation("Answers");
                });
#pragma warning restore 612, 618
        }
    }
}
